/*
  给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。
   
  示例 1：
  输入：head = [1,2,3,4,5]
  输出：[5,4,3,2,1]
  
  示例 2：
  输入：head = [1,2]
  输出：[2,1]
  
  示例 3：
  输入：head = []
  输出：[]
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* reverseList(struct ListNode* head){
    if(head == NULL || head->next == NULL) {
        return head;
    } else {
        struct ListNode* prev = NULL;
        struct ListNode* cur = head;
        struct ListNode* next = head->next;

        while(cur != NULL) {
            cur->next = prev;
            prev = cur;
            cur = next;
            if(next != NULL) {
                next = next->next;
            }
        }
        return prev;
    }
}
/*
  上面是力扣提交的，下面是我起初的想法：
*/
struct ListNode* reverseList(struct ListNode* head){
    if(head == NULL || head->next == NULL) {
        return head;
    } else {
        struct ListNode* prev = NULL;
        struct ListNode* cur = head;
        struct ListNode* next = head->next;

        cur->next = prev;//原本这句是可以和while循环整合的，所以选了上面的代码写入力扣
        while(next) {
          prev = cur;
          cur = next;
          next = next->next;
          cur->next = prev;
        }
        return cur;
    }
}



