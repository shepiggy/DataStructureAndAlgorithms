/*
56. 合并区间

以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [starti, endi] 。请你合并所有重叠的区间，并返回 一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间 。

示例 1：
输入：intervals = [[1,3],[2,6],[8,10],[15,18]]
输出：[[1,6],[8,10],[15,18]]
解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].

示例 2：
输入：intervals = [[1,4],[4,5]]
输出：[[1,5]]
解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。
 
提示：

1 <= intervals.length <= 104
intervals[i].length == 2
0 <= starti <= endi <= 104
*/

class Solution {
    public int[][] merge(int[][] intervals) {

        Arrays.sort(intervals, new Comparator<int[]>() {
            public int compare(int[] interval1, int[] interval2) {
                return interval1[0] - interval2[0];
            }
        });

        List<int[]> res = new ArrayList<>();//new ArrayList<int[]>()也可以
        res.add(intervals[0]);

        for(int i = 1; i < intervals.length; i++) {
            int leftVal = intervals[i][0], rightVal = intervals[i][1];
            if(res.get(res.size() - 1)[1] < leftVal) {
                res.add(new int[]{leftVal, rightVal});
            } else {
                res.get(res.size() - 1)[1] = Math.max(res.get(res.size() - 1)[1], rightVal);
            }
        }

        return res.toArray(new int[res.size()][]);//务必要传入这样一个参数!
    }
}
