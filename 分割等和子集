/*
416. 分割等和子集

给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。

示例 1：
输入：nums = [1,5,11,5]
输出：true
解释：数组可以分割成 [1, 5, 5] 和 [11] 。

示例 2：
输入：nums = [1,2,3,5]
输出：false
解释：数组不能分割成两个元素和相等的子集。

提示：

1 <= nums.length <= 200
1 <= nums[i] <= 100
*/


//动态规划（dp 一维数组）：
class Solution {
    public boolean canPartition(int[] nums) {
        if(nums == null || nums.length == 0) return false;

        int len = nums.length;
        int sum = 0;
        for(int num : nums) {
            sum += num;
        }
        if(sum % 2 != 0) return false;//如果数组的和均分不了，也不满足题意

        int target = sum / 2;
        int[] dp = new int[target + 1];
        for(int i = 0; i < len; i++) {
            for(int j = target; j >= nums[i]; j--) {//第二次动态规划倒着循环，上一次的也是一维数组，是在 01背包 那里
                dp[j] = Math.max(dp[j - nums[i]] + nums[i], dp[j]);
            }

            if(dp[target] == target) return true;
        }        
        return dp[target] == target;
    }
}
